export type Name = string;

export interface RouteOptions {
  withQueryString?: boolean;
}

export interface Route {
  uri: string;
  host: string | null;
}

export interface LarouteConfig {
  rootUrl?: string;
  routes: Record<Name, Route>;
}

export type Parameters = Record<string, any>;

export class RouteService<RouteName extends Name> {
  constructor(config: LarouteConfig);

  has(name: RouteName): boolean;

  createURLWithoutQuery(name: RouteName, parameters?: Parameters): string;

  generateFullURL(name: RouteName, parameters?: Parameters): string;

  private create(name: RouteName, parameters: Parameters, options?: RouteOptions): string;

  private find(name: RouteName): Route;

  private getHostname(route: Route): string;

  private replaceNamedParameters(uri: string, parameters: Parameters): string;

  private getRouteQueryString(parameters: Parameters): string;

  private buildUri(hostname: string, path: string, queryString: string): string;
}

export default RouteService;
